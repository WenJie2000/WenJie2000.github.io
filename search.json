[{"title":"vim常用指令","date":"2021-11-02T03:03:01.841Z","url":"/2021/11/02/Linux/Centos7/vim%E6%8C%87%E4%BB%A4/","tags":[["Centos7","/tags/Centos7/"],["Linux","/tags/Linux/"],["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"]],"categories":[["Linux","/categories/Linux/"]],"content":"第一讲 光标在屏幕文本中的移动既可以用箭头键，也可以使用 hjkl 字母键。h (左移) j (下行) k (上行) l (右移) 欲进入 Vim 编辑器(从命令行提示符)，请输入：vim 文件名 &lt;回车&gt; 欲退出 Vim 编辑器，请输入 :q! &lt;回车&gt; 放弃所有改动。或者输入 :wq &lt;回车&gt; 保存改动。 在正常模式下删除光标所在位置的字符，请按： x 欲插入或添加文本，请输入： i 输入欲插入文本 在光标前插入文本A 输入欲添加文本 在一行后添加文本 特别提示：按下 键会带您回到正常模式或者撤消一个不想输入或部分完整的命令。 第二讲 欲从当前光标删除至下一个单词，请输入：dw 欲从当前光标删除至当前行末尾，请输入：d$ 欲删除整行，请输入：dd 欲重复一个动作，请在它前面加上一个数字：2w 在正常模式下修改命令的格式是： operator [number] motion 其中： operator - 操作符，代表要做的事情，比如 d 代表删除 [number] - 可以附加的数字，代表动作重复的次数 motion - 动作，代表在所操作的文本上的移动，例如 w 代表单词(word)，$ 代表行末等等。 欲移动光标到行首，请按数字0键：0 欲撤消以前的操作，请输入：u (小写的u)欲撤消在一行中所做的改动，请输入：U (大写的U)欲撤消以前的撤消命令，恢复以前的操作结果，请输入：CTRL-R 第三讲 要重新置入已经删除的文本内容，请按小写字母 p 键。该操作可以将已删除的文本内容置于光标之后。如果最后一次删除的是一个整行，那么该行将置于当前光标所在行的下一行。 要替换光标所在位置的字符，请输入小写的 r 和要替换掉原位置字符的新字符即可。 更改类命令允许您改变从当前光标所在位置直到动作指示的位置中间的文本。比如输入 ce 可以替换当前光标到单词的末尾的内容；输入 c$ 可以替换当前光标到行末的内容。 更改类命令的格式是：c [number] motion 第四讲 CTRL-G 用于显示当前光标所在位置和文件状态信息。G 用于将光标跳转至文件最后一行。先敲入一个行号然后输入大写 G 则是将光标移动至该行号代表的行。gg 用于将光标跳转至文件第一行。 输入 / 然后紧随一个字符串是在当前所编辑的文档中正向查找该字符串。输入 ? 然后紧随一个字符串则是在当前所编辑的文档中反向查找该字符串。完成一次查找之后按 n 键是重复上一次的命令，可在同一方向上查找下一个匹配字符串所在；或者按大写 N 向相反方向查找下一匹配字符串所在。CTRL-O 带您跳转回较旧的位置，CTRL-I 则带您到较新的位置。 如果光标当前位置是括号(、)、[、]、{、}，按 % 会将光标移动到配对的括号上。 在一行内替换头一个字符串 old 为新的字符串 new，请输入 :s/old/new在一行内替换所有的字符串 old 为新的字符串 new，请输入 :s/old/new/g在两行内替换所有的字符串 old 为新的字符串 new，请输入 :#,#s/old/new/g在文件内替换所有的字符串 old 为新的字符串 new，请输入 :%s/old/new/g进行全文替换时询问用户确认每个替换需添加 c 标志 :%s/old/new/gc 第五讲 :!command 用于执行一个外部命令 command。 请看一些实际例子：(MS-DOS) (Unix) :!dir :!ls - 用于显示当前目录的内容。 :!del FILENAME :!rm FILENAME - 用于删除名为 FILENAME 的文件。 :w FILENAME 可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文件中。 v motion :w FILENAME 可将当前编辑文件中可视模式下选中的内容保存到文件FILENAME 中。 :r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置后面。 :r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。 第六讲 输入小写的 o 可以在光标下方打开新的一行并进入插入模式。输入大写的 O 可以在光标上方打开新的一行。 输入小写的 a 可以在光标所在位置之后插入文本。输入大写的 A 可以在光标所在行的行末之后插入文本。 e 命令可以使光标移动到单词末尾。 操作符 y 复制文本，p 粘贴先前复制的文本。 输入大写的 R 将进入替换模式，直至按 键回到正常模式。 输入 :set xxx 可以设置 xxx 选项。一些有用的选项如下： ‘ic’ ‘ignorecase’ 查找时忽略字母大小写 ‘is’ ‘incsearch’ 查找短语时显示部分匹配 ‘hls’ ‘hlsearch’ 高亮显示所有的匹配短语选项名可以用完整版本，也可以用缩略版本。 在选项前加上 no 可以关闭选项： :set noic 第七讲 输入 :help 或者按 键或 键可以打开帮助窗口。 输入 :help cmd 可以找到关于 cmd 命令的帮助。 输入 CTRL-W CTRL-W 可以使您在窗口之间跳转。 输入 :q 以关闭帮助窗口 您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。 当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。按 可以使用一个补全。 练习题1.输入以下内容aaaaaabbbbbbccccccddddddeeeeee以下操作不能用键盘的上下左右键2.打开行号3.跳到最后一行，再跳到第2行，再跳到首行4.将第一行复制放到第三行的后面5.将2，3行复制放到最后6.撤销第5步的操作，将2，3行复制到第4行后面7.删除第2行8.删除最后两行9.将第1行的a替换成k10.将整篇文章的c替换成y11.将当前文件以文件名“XM1”另存到/tmp目录下。12.统计该文件有多少行？"},{"title":"find命令","date":"2021-10-29T07:12:49.770Z","url":"/2021/10/29/Linux/Centos7/find%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/","tags":[["Centos7","/tags/Centos7/"],["Linux","/tags/Linux/"]],"categories":[["Linux","/categories/Linux/"]],"content":"*基本用法* 列出给定目录(base_path)下所有的文件和子目录： find base_path -print 补充：根据文件名和正则表达式进行搜索，使用选项 -name或-iname(忽略大小写)： find base_path -name ‘XXXX’ -print find base_path -iname ‘XXXX’ -print"},{"title":"Centos7安装配置","date":"2021-10-29T00:55:29.015Z","url":"/2021/10/29/Linux/Centos7/CENTOS7%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","tags":[["Centos7","/tags/Centos7/"],["Linux","/tags/Linux/"]],"categories":[["Linux","/categories/Linux/"]]},{"title":"SQL经典50题","date":"2021-10-27T07:22:49.000Z","url":"/2021/10/27/MySQL/SQL%E7%BB%8F%E5%85%B850%E9%A2%98&%E7%AD%94%E6%A1%88/SQL%E7%BB%8F%E5%85%B850%E9%A2%98&%E7%AD%94%E6%A1%88/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"50题只是SQL入门的一个前提，会50题并不能代表SQL合格了。 如日常工作需要，多看看SQL结合业务的实操题更有用。 数据表介绍 1.学生表 Student(SId,Sname,Sage,Ssex) SId 学生编号,Sname 学生姓名,Sage 出生年年月,Ssex 学生性别 2.课程表 Course(CId,Cname,TId) CId 课程编号,Cname 课程名称,TId 教师编号 3.教师表 Teacher(TId,Tname) TId 教师编号,Tname 教师姓名 4.成绩表 SC(SId,CId,score) SId 学生编号,CId 课程编号,score 科目表 Course 教师表 Teacher 成绩表 SC 练习题目1.查询” 01 “课程比” 02 “课程成绩高的学生的信息及课程分数 1.1 查询同时存在”01”课程和”02”课程的情况 1.2 查询存在”01”课程但可能不存在”02”课程的情况(不存在时显示为 null ) 1.3 查询不存在“01”课程但存在”02”课程的情况（文字陷阱啊，好几次搞错了。） 2.查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩 3.查询在 SC 表存在成绩的学生信息（不停精进代码，让代码更优化。） 4.查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩(没成绩的显示为 null ) 4.1 查有成绩的学生信息（有成绩不等于学生信息在sc表里，如果表中学生成绩为0呢？逻辑要对，避免逻辑漏洞。而且，以后尽量避免用查询嵌套。） 5.查询「李」姓老师的数量 6.查询学过张三老师授课的同学的信息 7.查询没有学全所有课程的同学的信息 8.查询至少有一门课与学号为” 01 “的同学所学相同的同学的信息 9.查询和” 01 “号的同学学习的课程完全相同的其他同学的信息 10.查询没学过”张三”老师讲授的任一门课程的学生姓名 11.查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 12.检索” 01 “课程分数小于 60，按分数降序排列的学生信息 13.按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩 14.查询各科成绩最高分、最低分和平均分：以如下形式显示：课程 ID，课程 name，最高分，最低分，平均分，及格率，中等率， 优良率，优秀率 及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90 要求输出课程号和选修人数，查询结果按人数降序排列列，若人数相同，按课程号升序 排列"},{"title":"JAVA基础学习-DAY2","date":"2021-06-27T16:00:01.000Z","url":"/2021/06/28/JAVA/JAVA%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/JAVA%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-DAY2/","tags":[["JAVA","/tags/JAVA/"]],"categories":[["JAVA","/categories/JAVA/"]],"content":"尚未开放"},{"title":"JAVA基础学习-DAY1","date":"2021-06-27T16:00:00.000Z","url":"/2021/06/28/JAVA/JAVA%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/JAVA%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-DAY1/","tags":[["JAVA","/tags/JAVA/"]],"categories":[["JAVA","/categories/JAVA/"]],"content":"JAVA学习-DAY1此文本为个人学习JAVA中的笔记。我学习时是看的尚硅谷的视频，个人认为他讲的很细。视频网址为。本人有一定的其他语言基础所以笔记从P20开始。如果有其他语言基础建议从P17开始看。 DAY1JAVA基础知识图谱 JAVA历史1991年 Green项目，开发语言最初命名为Oak (橡树)1994年，开发组意识到Oak 非常适合于互联网1996年，发布JDK 1.0，约8.3万个网页应用Java技术来制作1997年，发布JDK 1.1，JavaOne会议召开，创当时全球同类会议规模之最1998年，发布JDK 1.2，同年发布企业平台J2EE1999年，Java分成J2SE、J2EE和J2ME，JSP/Servlet技术诞生2004年，发布里程碑式版本：JDK 1.5，为突出此版本的重要性，更名为JDK 5.02005年，J2SE -&gt; JavaSE，J2EE -&gt; JavaEE，J2ME -&gt; JavaME2009年，Oracle公司收购SUN，交易价格74亿美元2011年，发布JDK 7.02014年，发布JDK 8.0，是继JDK 5.0以来变化最大的版本2017年，发布JDK 9.0，最大限度实现模块化2018年3月，发布JDK 10.0，版本号也称为18.32018年9月，发布JDK 11.0，版本号也称为18.9 课程主要讲JDK8.0。 Java的应用领域• 企业级应用：JAVA后台开发。 • Android平台应用：Android应用程序使用Java语言编写。Android开发水平的高低 很大程度上取决于Java语言核心能力是否扎实。 • 大数据平台开发：各类框架有Hadoop，spark，storm，flink等，就这类技术生态 圈来讲，还有各种中间件如flume，kafka，sqoop等等 ，这些框架以及工具大多数 是用Java编写而成，但提供诸如Java，scala，Python，R等各种语言API供编程。 • 移动领域应用：主要表现在消费和嵌入式领域，是指在各种小型设备上的应用，包括手 机、PDA、机顶盒、汽车通信设备等。 Java语言的特点特点一：面向对象 ​ 两个基本概念：类、对象 ​ 三大特性：封装、继承、多态 特点二：健壮性 ​ 吸收了C/C++语言的优点，但去掉了其影响程序健壮性的部分（如指针、内存的申请与 释放等），提供了一个相对安全的内存管理和访问机制 特点三：跨平台性 ​ 跨平台性：通过Java语言编写的应用程序在不同的系统平台上都可以运行。“Write once , Run Anywhere” ​ 原理：只要在需要运行 java 应用程序的操作系统上，先安装一个Java虚拟机 (JVM Java Virtual Machine) 即可。由JVM来负责Java程序在该系统中的运行。 核心机制—Java虚拟机​ JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指** 令，管理数据、内存、寄存器。 核心机制—垃圾回收​ Java 语言消除了程序员回收无用内存空间的责任：它提供一种系统级线程跟踪存储空 间的分配情况。并在JVM空闲时，检查并释放那些可被释放的存储空间。 JDK=JRE+开发工具集 JRE=JVM+JAVASE标准类库 jdk安装跳过 java开发步骤 第一个java程序 创建文件HelloWorld.java 用记事本打开，并写入代码 打开cmd 进入该文件目录。 运行指令javac HelloWorld.java 生成HelloWorld.class 输入指令 java HelloWorld 运行 P35 注释// 单行注释 /* 多行注释 ***/**（不能嵌套使用） p36 文档注释格式：/** @author 指定java程序的作者 @version 指定源文件的版本 */ 注释内容可以被JDK提供的工具 javadoc 所解析，生成一套以网页文件形 式体现的该程序的说明文档。 使用指令：javadoc -d 命名 -author -version 源程序名 P39 JAVA API文档Java语言提供了大量的基础类，因此 Oracle 也为这些基础类提供了相应的 API文档，用于告诉开发者如何使用这些类，以及这些类里包含的方法。 英文版下载地址  中文版java8  P40 第一个JAVA程序的总结1.在一个java源文件中可以声明多个class。但只能最多有一个声明为public的。 ​ 而且要求声明为public的类名必须与源文件名相同。 2.程序的入口是main()方法。格式是固定的。 3.输出语句 ​ System.out.println(); (输出完换行) ​ System.out.print(); （只输出不换行） 4.每个执行语句都以分号结束 5.编译过程：编译以后，会生成一个或多个字节码文件。字节码文件的文件名与java源文件中的类名相同。"},{"title":"hive安装配置","date":"2021-06-22T16:00:15.000Z","url":"/2021/06/23/Hadoop/5.hive/hive%E5%AE%89%E8%A3%85/","tags":[["hive","/tags/hive/"]],"categories":[["Hadoop","/categories/Hadoop/"]],"content":"hive下载地址（） 上传HIVE包到/opt/software目录并解压 tar -zxvf /opt/softwares/apache-hive-1.2.1-bin.tar.gz -C /opt/modules/ 修改路径名 mv /opt/modules/apache-hive-1.2.1-bin/ /opt/modules/hive 修改所有者 sudo chown -R huser:huser /opt/modules/hive/ 将Hbase目录SCP到其它节点dn1,dn2 sudo scp -r /opt/modules/hive/ huser@hadoop02:/opt/modules/ sudo scp -r /opt/modules/hive/ huser@hadoop03:/opt/modules/ 将hIVE下的bin目录加入到/etc/profile中 export HIVE_HOME=/opt/modules/hive/PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$JRE_HOME/bin:$ZOOKEEPER_HOME/bin:$ZOOKEEPER_HOME/conf:$HBASE_HOME/bin:$HIVE_HOME/bin source /etc/profile 查看hive -version 配置HIVE cd /opt/modules/hive/conf/ cp hive-default.xml.template hive-site.xml 修改hive-site.xml 将“mysql-connector-java-5.1.39.jar”包拷贝到hive的安装目录下的lib目录中（/opt/modules/hive/lib） “mysql-connector-java”下载地址 "},{"title":"docker安装配置","date":"2021-06-22T16:00:09.000Z","url":"/2021/06/23/Hadoop/4.docker/docker%E5%AE%89%E8%A3%85/","tags":[["docker","/tags/docker/"]],"categories":[["Hadoop","/categories/Hadoop/"]],"content":"1.安装docker1.1 添加docker的repo源​ sudo yum-config-manager –add-repo  1.2 安装Docker CE 1.3 配置DockerHub 镜像拉取地址,并启动DOCKERsudo mkdir /etc/docker sudo tee /etc/docker/daemon.json &lt;&lt;-‘EOF’ { “registry-mirrors”: [“;] } EOFsudo systemctl daemon-reloadsudo systemctl restart docker #重启docker 2.在docker安装mysql 3.启动mysql3.1格式规则​ sudo docker run -p 3306:3306 –name mysql -v /opt/modules/mysql/conf/my.cnf:/etc/mysql/conf.d -v /opt/modules/mysql/logs:/logs -v /opt/modules/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7 –name mysql: 运行服务的取名-v是将主机目录下的文件挂载到容器中路径下(/scy是我本人用户)-e MYSQL_ROOT_PASSWORD:初始化root用户密码-d mysql:5.7 : 后台运行mysql5.7 sudo docker run -p 3307:3306 –name mysql -v /opt/modules/mysql/logs:/logs -v /opt/modules/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7 sudo docker run -p 3306:3306 –name mysqllatest -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latestsudo docker run -p 3306:3306 –name mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7 问题集：1.容器运行MYSQL时，提示IPV4的解决办法.1.1 进入vim /etc/sysctl.conf 文件加入以下内容(将下面行命令执行即可) echo “net.ipv4.ip_forward=1” &gt;&gt; vim /etc/sysctl.conf1.2 重启网络和重启容器，并观察上面的设置是否生效变成1 systemctl restart network &amp;&amp; systemctl restart docker sysctl net.ipv4.ip_forward2.解决navicat在连接mysql8版本后出现“Authentication plugin ‘caching_sha2_password’ cannot be loaded”解决办法。2.1 查看容器ID号，并进入容器中。 sudo docker ps -a sudo docker exec -it 容器ID /bin/bash2.2 登陆mysql并修改密码规则1）连接数据库 mysql -u root -p输入数据库密码123456，密码正确则进入mysql数据库2）#修改加密规则 ALTER USER ‘root‘@’%’ IDENTIFIED BY ‘123456’ PASSWORD EXPIRE NEVER;3）#更新一下用户的密码 ALTER USER ‘root‘@’%’ IDENTIFIED WITH mysql_native_password BY ‘123456’;4）#刷新权限 FLUSH PRIVILEGES;5）更改密码（可选项，需要改密码则执行它） alter user ‘root‘@’localhost’ identified by ‘111111’; 让容器一直运行方法： 1.让docker开机自动启动 sudo systemctl enable docker.service2.让docker加载镜像 sudo docker update –restart=always imagesName"},{"title":"HDFS Shell","date":"2021-06-22T16:00:01.000Z","url":"/2021/06/23/Hadoop/2.HDFS/HDFS%20Shell/","tags":[["HDFS","/tags/HDFS/"]],"categories":[["Hadoop","/categories/Hadoop/"]],"content":"维护中"},{"title":"JAVA安装配置","date":"2021-06-22T16:00:00.000Z","url":"/2021/06/23/Hadoop/1.hadoop%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/hadoop%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","tags":[["Hadoop","/tags/Hadoop/"]],"categories":[["Hadoop","/categories/Hadoop/"]],"content":"前提（centos7已安装且有至少一个非root的管理员用户） 看你的NAT网段和网关是多少？ 例：网关192.168.112.2 ​ 网段192.168.112.0/24 我的规划 Hadoop01 192.168.112.131 Hadoop02 192.168.112.132 Hadoop03 192.168.112.133 创建hadoop sudo权限下面命令在root用户下操作 创建hadoop用户 -———————— useradd hadoop passwd Hadoop -———————– vim /etc/sudoers 切换到hadoop用户 配置静态IPifconfig 查看网卡的名字 ——–我的是ens32也可能是ens33 sudo vim /etc/sysconfig/network-scripts/ifcfg-ens32 或sudo vim /etc/sysconfig/network-scripts/ifcfg-ens33 修改文件，如图 这里PREFIX=”24”也可以改为 NETMASK=255.255.255.0 修改主机名（按需求使用）查看机器的名称 hostname vim /etc/hostname 修改IP和主机名的映射关系sudo vim /etc/hosts 添加以下内容 192.168.112.131 hadoop01192.168.112.132 hadoop02192.168.112.133 hadoop03 卸载OPENJDK,安装新版JDK查询现有JDK的版本 rpm -qa | grep java 如果没有返回内容则未安装java 卸载旧版本的JAVA 卸载OPEN JDK JAVA sudo rpm -e –nodeps 软件名 创建文件夹softwares和modulessudo mkdir /opt/softwares sudo mkdir /opt/modules 将jdk传到softwareJDK下载地址 可以用xftp传，如果传输失败就用root用户登录。 jdk解压到modules文件夹sudo tar -xzvf /opt/softwares/jdk-8u301-linux-x64.tar.gz -C /opt/modules/ 配置JDKsudo vim /etc/profile 在末尾添加 export JAVA_HOME=/opt/modules/jdk1.8.0_301export PATH=$PATH:$JAVA_HOME/bin 让JDK生效并验证source vim /etc/profile java -version 关闭防火墙sudo systemctl status firewalld.service sudo systemctl stop firewalld.service sudo systemctl disable firewalld.service 克隆虚拟机（2次） 把IP，机器名更改后，再分别测试一下。 实现hadoop免密登录hadoop01为以下指令，另外两台也要配 ssh-keygen -t rsa ssh-copy-id hadoop01 ssh-copy-id hadoop02 ssh-copy-id hadoop03 安装hadoop将安装包传到/opt/softwares cd /opt/softwares sudo tar -zxvf hadoop-2.7.4.tar.gz -C /opt/modules/ 配置/etc/profile文件里的环境变量，配置同前面的JAVA_HOME sudo vi /etc/profile export JAVA_HOME=/opt/modules/jdk1.8.0_301export HADOOP_HOME=/opt/modules/hadoop-2.7.4export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin 执行source /etc/profile让环境变量生效 配置HADOOP里的文件注意：果如提示hadoop文件权限不够，是因为hadoop文件夹不是hadoop用户解压来的，要用以下命令把权限全部改成hadoop所有。chown -R huser:huser hadoop-2.7.4/ 将hadoop-env.sh mapred-env.sh yarn-env.sh 加入JAVA_HOME变量 sudo echo “JAVA_HOME=/opt/modules/jdk1.8.0_301” &gt;&gt; /opt/modules/hadoop-2.7.4/etc/hadoop/hadoop-env.sh sudo echo “JAVA_HOME=/opt/modules/jdk1.8.0_301” &gt;&gt; /opt/modules/hadoop-2.7.4/etc/hadoop/mapred-env.sh sudo echo “JAVA_HOME=/opt/modules/jdk1.8.0_301” &gt;&gt; /opt/modules/hadoop-2.7.4/etc/hadoop/yarn-env.sh 配置HDFS cd /opt/modules/hadoop-2.7.2/etc/hadoop 重命名mapred-site.xml.template更名为mapred-site.xml mv mapred-site.xml.template mapred-site.xml F 将hadoop01上的hadoop2.7目录用SCP命令复制到hadoop02,hadoop03机器上 在hadoop01上 sudo scp -r /opt/modules/hadoop-2.7.4 huser@hadoop02:/opt/modules sudo scp –r /opt/modules/hadoop-2.7.4 huser@hadoop03:/opt/modules 注意：如果从hadoop01用huser用户在复制时提示权限不够，在目标机运行以下的命令 sudo chown -R huser:huser /opt/modules/ 复制完成后，格式化hadoop01 hadoop namenode -format 运行hadoop集群在hadoop01中 start-all.sh 在网页中输入 192.168.112.131:50070 有此界面表明运成功 在各个主机 jps 查看运行状况 停止运行 stop-all.sh"},{"title":"sqoop安装配置","date":"2021-06-22T16:00:00.000Z","url":"/2021/06/23/Hadoop/6.sqoop/sqoop%E5%AE%89%E8%A3%85/","tags":[["sqoop","/tags/sqoop/"]],"categories":[["Hadoop","/categories/Hadoop/"]],"content":"sqoop下载地址 下载并上传 解压到/opt/modules/ tar -zxvf /opt/softwares/sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz -C /opt/modules/ 修改路径 mv /opt/modules/sqoop-1.4.6.bin__hadoop-2.0.4-alpha/ /opt/modules/sqoop 将sqoop下的bin目录加入到/etc/profile中 修改配置文件 cd /opt/modules/sqoop/confcp sqoop-env–template.sh sqoop-env.shvim sqoop-env.sh export HADOOP_COMMON_HOME=/opt/modules/hadoop-2.7.4/export HADOOP_MAPRED_HOME=/opt/modules/hadoop-2.7.4/export HBASE_HOME=/opt/modules/hbase-1.2.2/export HIVE_HOME=/opt/modules/hive/export ZOOCFGDIR=/opt/modules/zookeeper-3.4.6/conf 加入mysql的jdbc驱动包 将mysql的连接jar复制到SQOOP下的lib目录中 "},{"title":"JAVA安装配置","date":"2021-06-22T16:00:00.000Z","url":"/2021/06/23/JAVA/JAVA%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/JAVA%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","tags":[["JAVA","/tags/JAVA/"]],"categories":[["JAVA","/categories/JAVA/"]],"content":"JDK安装java下载官方网站 选择适合的版本（下载老版本很可能需要注册账号） 开发时目前建议Java8 将来的流行的开发版本可能是java11 注意下载jdk版，而不是jre版。（jdk是开发者使用的，而jre只能用于执行程序） 开始安装点击下一步 设置JDK安装位置（可以不安装在C盘） 点击下一步 设置安装位置（建议和jdk都安装在Java文件夹） 点击下一步 安装完成 点击后续步骤可详细了解java8（） 配置环境变量打开此电脑 鼠标右键-&gt;属性 点击 高级系统设置 点击 环境变量 点击 系统变量 下的 新建 设置变量名为JAVA_HOME 设置变量值为jdk安装路径（D:\\Java\\jdk1.8.0_301） 点击 确定 找到 环境变量中的 Path ，点 编辑 点击 新建，并输入 %JAVA_HOME%\\bin 点击 确定 打开 cmd 输入 java -version 和 javac -version 出现版本信息表示安装成功。 JDK卸载"},{"title":"MySQL重要指令学习-ALL","date":"2020-10-25T16:00:00.000Z","url":"/2020/10/26/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/19.%E6%80%BB%E7%BB%93/%E5%9C%A8sqlbolt%E4%B8%8A%E5%AD%A6%E4%B9%A0SQL/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！部分指令该网站不支持！) SQL Lesson 1: SELECT queries 101查询表格中的特定列 查询所有列 Exercise1 — Tasks 1.Find the title of each film 从Movies中找到每个电影的名字(Title) 2.Find the director of each film 找到每个电影的Director 3.Find the title and director of each film 找到每个电影的Title和Director 4.Find the title and year of each film 找到每个电影的Title和Year 5.Find all the information about each film 找到每个电影的所有信息 参考答案 SQL Lesson 2: Queries with constraints (Pt. 1)带约束的选择查询 Operator Condition SQL Example =, !=, &lt; &lt;=, &gt;, &gt;= 标准数值运算符 列 != 4 BETWEEN … AND … 数值在两个值范围内 (包含) 列 BETWEEN 1.5 AND 10.5 NOT BETWEEN … AND … 数值不在两个值范围内 (包含) 列 NOT BETWEEN 1 AND 10 IN (…) 数值在列表中 列 IN (2, 4, 6) NOT IN (…) 数值没在列表中 列 NOT IN (1, 3, 5) Exercise 2 — Tasks 1.Find the movie with a row id of 6 找到Id为6的电影 2.Find the movies released in the years between 2000 and 2010 找到movies中2000到2010年的电影 3.Find the movies not released in the years between 2000 and 2010 找到movies中没在2000到2010年的电影 4.Find the first 5 Pixar movies and their release year 找到最早的5个皮克斯电影和它们的年份 参考答案 SQL Lesson 3: Queries with constraints (Pt. 2) Operator Condition Example = 区分大小写的字符串精确比较 (注意单个的相等) 列 = “abc” != or &lt;&gt; 区分大小写的字符串不等精确比较 列 != “abcd” LIKE 不区分大小写的精确字符串比较 列 LIKE “ABC” NOT LIKE 不区分大小写的精确字符串不等比较 列 NOT LIKE “ABCD” % 用于字符串中的任意位置，以匹配由零个或多个字符组成的序列 (只和 LIKE 或 NOT LIKE 同时使用) 列 LIKE “%AT%” (matches “AT”, “ATTIC”, “CAT” or even “BATS”) _ 用于字符串中的任意位置匹配单个字符 (只和 LIKE 或 NOT LIKE 同时使用) 列 LIKE “AN_” (matches “AND”, but not “AN”) IN (…) 字符串存在于列表中 列 IN (“A”, “B”, “C”) NOT IN (…) 字符串不在列表中 列 NOT IN (“D”, “E”, “F”) 带约束的选择查询 Exercise 3 — Tasks 1.Find all the Toy Story movies 找到所有的Toy Story电影 2.Find all the movies directed by John Lasseter 找到所有由John Lasseter导演的电影 3.Find all the movies (and director) not directed by John Lasseter 找到所有的不是John Lasseter导演的不是电影（和Director） 4.Find all the WALL-* movies 找到所有的WALL-*电影 参考答案 SQL Lesson 4: Filtering and sorting Query results唯一结果的选择查询 带有有序结果的选择查询 限制行的选择查询 Exercise 4 — Tasks 1.List all directors of Pixar movies (alphabetically), without duplicates 列出所有的皮克斯电影的directors（照字母顺序排列），没有重复 2.List the last four Pixar movies released (ordered from most recent to least) 列出最近上映的四部皮克斯电影（从最近源到最早） 3.List the first five Pixar movies sorted alphabetically 按字母顺序列出皮克斯的前五部电影 4.List the next five Pixar movies sorted alphabetically 按字母顺序列出皮克斯5到10部电影 参考答案 SQL Review: Simple SELECT Queries选择查询 Review 1 — Tasks 1.List all the Canadian cities and their populations 列出所有加拿大城市（City）及其人口(Population) 2.Order all the cities in the United States by their latitude from north to south 按照从北到南的纬度把美国所有的城市排序 3.List all the cities west of Chicago, ordered from west to east 列出芝加哥以西的所有城市，按从西到东的顺序 4.List the two largest cities in Mexico (by population) 列出墨西哥最大的两个城市(按人口分) 5.List the third and fourth largest cities (by population) in the United States and their population 列出美国第三和第四大城市(按人口)及其人口 注：Latitude 纬度， Longitude 经度 参考答案 SQL Lesson 6: Multi-table queries with JOINs在多个表上使用INNER JOIN选择查询 Exercise 6 — Tasks 1.Find the domestic and international sales for each movie 找出每部电影(Title)在国内和国际上的销售情况(Domestic_sales,International_sales) 2.Show the sales numbers for each movie that did better internationally rather than domestically 展示每一部在国际(International_sales)上比在国内(Domestic_sales)销量更好的电影 3.List all the movies by their ratings in descending order 把所有的电影按评分（Rating）降序排列 参考答案 SQL Lesson 7: OUTER JOINs在多个表上使用左/右/全连接选择查询 Exercise 7 — Tasks 1.Find the list of all buildings that have employees 找到所有有员工的建筑列表 2.Find the list of all buildings and their capacity 找到所有建筑及其Capacity的列表 3.List all buildings and the distinct employee roles in each building (including empty buildings) 列出所有建筑和每个建筑中不同的员工职责(role)(包括空的建筑) 参考答案 SQL Lesson 8: A short note on NULLs对NULL值有约束的选择查询 Exercise 8 — Tasks 1.Find the name and role of all employees who have not been assigned to a building 查找所有尚未分配到大楼的员工的名字和职责 2.Find the names of the buildings that hold no employees 找出没有员工的大楼的名字 参考答案 SQL Lesson 9: Queries with expressions带有表达式的查询示例 带表达式的别名选择查询 具有列和表别名的查询示例 Exercise 9 — Tasks 1.List all movies and their combined sales in millions of dollars 列出所有电影及其总销售额（以百万美元计） 2.List all movies and their ratings in percent 列出所有电影及其收视率（使用百分比） 3.List all movies that were released on even number years 列出所有偶数年发行的电影 参考答案 SQL Lesson 10: Queries with aggregates (Pt. 1)Select query with aggregate functions over all rows Function Description COUNT(***)**, COUNT(column) 一个常用函数，用于在未指定列名的情况下统计组中的行数。否则，计算指定列中具有非空值的组中的行数。 MIN(column) 为组中的所有行查找指定列中的最小数值 MAX(column) 为组中的所有行在指定列中查找最大的数值。 **AVG(**column) 在指定列中查找组中所有行的平均数值。 SUM(column) 在指定的列中查找组中各行的所有数值之和。 Exercise 10 — Tasks 1.Find the longest time that an employee has been at the studio 找出员工在工作室工作的最长时间 2.For each role, find the average number of years employed by employees in that role 对于每个角色，查找该角色雇员的平均工作年限 3.Find the total number of employee years worked in each building 查找在每个建筑物工作的员工总年数 参考答案 SQL Lesson 11: Queries with aggregates (Pt. 2)选择具有约束的查询 Exercise 11 — Tasks 1.Find the number of Artists in the studio (without a HAVING clause) 查找工作室中艺术家的数量(不用 HAVING 子句) 2.Find the number of Employees of each role in the studio 查找工作室中每种职责的雇员人数 3.Find the total number of years employed by all Engineers 找到所有工程师（Engineer）的总受雇年数（Years_employed） 参考答案 SQL Lesson 12: Order of execution of a Query完整的SELECT查询 Exercise 12 — Tasks 1.Find the number of movies each director has directed 找出每位导演导演的电影数量 2.Find the total domestic and international sales that can be attributed to each director 找出每一位导演在国内和国际上的总销售额 参考答案 SQL Lesson 13: Inserting rows包含所有列的值的插入语句 插入特定列的语句 Exercise 13 — Tasks 1.Add the studio’s new production, Toy Story 4 to the list of movies (you can use any director) 将该工作室的新作品Toy Story 4添加到电影列表中(你可以使用任何导演) 2.Toy Story 4 has been released to critical acclaim! It had a rating of 8.7, and made 340 million domestically and 270 million internationally. Add the record to the BoxOffice table. Toy Story 4上映后广受好评!它的评分为8.7，国内票房为3.4亿美元，国际票房为2.7亿美元。将记录添加到BoxOffice表中。 参考答案 SQL Lesson 14: Updating rows跟新表数据 Exercise 14 — Tasks 1.The director for A Bug's Life is incorrect, it was actually directed by John Lasseter A Bug's Life的导演是错误的，实际上是John Lasseter导演的 2.The year that Toy Story 2 was released is incorrect, it was actually released in 1999 Toy Story 2发布的年份是不正确的，它实际上是在1999年上映的 3.Both the title and director for Toy Story 8 is incorrect! The title should be \"Toy Story 3\" and it was directed by Lee Unkrich Toy Story 2的片名和导演都是错误的！标题应该是“Toy Story 3”，它是由李昂克里奇导演的 参考答案 SQL Lesson 15: Deleting rows带条件的删除语句 Exercise 15 — Tasks 1.This database is getting too big, lets remove all movies that were released before 2005. 这个数据库太大了，让我们删除所有2005年之前上映的电影。 2.Andrew Stanton has also left the studio, so please remove all movies directed by him. Andrew Stanton也离开了工作室，所以请删除他执导的所有电影。 参考答案 SQL Lesson 16: Creating tables创建带有可选表格约束和默认值的表格语句 Table data types Data type Description INTEGER, BOOLEAN 整数数据类型可以存储整数值，如数字的计数或年龄。在某些实现中，布尔值只是表示为0或1的整数值。 FLOAT, DOUBLE, REAL 浮点数据类型可以存储更精确的数值数据，如测量值或小数值。根据该值所需的浮点精度，可以使用不同的类型。 CHARACTER(num_chars), VARCHAR(num_chars), TEXT 基于文本的数据类型可以在各种地区存储字符串和文本。在处理这些列时，不同类型之间的区别通常相当于底层数据库的效率。CHARACTER和VARCHAR(可变字符)类型都是用它们可以存储的最大字符数指定的(较长的值可能会被截断)，因此使用大表存储和查询更有效。 DATE, DATETIME SQL还可以存储日期和时间戳，以跟踪时间序列和事件数据。使用它们可能很棘手，特别是在跨时区操作数据时。 BLOB 最后，SQL可以将二进制数据以blob的形式直接存储在数据库中。这些值对数据库通常是不透明的，因此通常必须使用正确的元数据存储它们，以便查询它们。 Docs: MySQL, Postgres, SQLite, Microsoft SQL Server Table constraints Constraint Description PRIMARY KEY 这意味着这个列中的值是唯一的，每个值都可以用来标识该表中的一行。 AUTOINCREMENT 对于整型值，这意味着值将自动填充，并在每次插入行时递增。不是所有数据库都支持。 UNIQUE 这意味着这一列中的值必须是唯一的，因此不能在这一列中插入与表中另一行值相同的行。与“主键”不同的是，它不必是表中某一行的键。 NOT NULL 这意味着插入的值不能是’ NULL ‘。 CHECK (expression) 这允许您运行更复杂的表达式来测试插入的值是否有效。例如，您可以检查值是否为正，或大于特定的大小，或以特定的前缀开头，等等。 FOREIGN KEY 这是一种一致性检查，确保此列中的每个值与另一个表中某列中的另一个值相对应。例如，如果有两个表，一个按ID列出所有雇员，另一个列出他们的工资信息，那么“FOREIGN KEY”可以确保工资表中的每一行都对应于主employee列表中的一个有效雇员。 An example Exercise 16 — Tasks 1.创建一个名为Database的新表，包含以下列: -Name描述数据库名称的字符串(文本) -Version该数据库的最新版本号(浮点数) -Download_count下载数据库的整数计数 该表没有约束。 参考答案 SQL Lesson 17: 修改表添加列修改表以添加新列 移除列修改表以删除列 重命名表更改表名 Exercise 17 — Tasks 1.Add a column named **Aspect_ratio** with a **FLOAT** data type to store the aspectratio each movie was released in. 添加一个名为 Aspect _ ratio 的列，该列具有 FLOAT 数据类型，用于存储年发布的每部电影的 Aspect-ratio。 2.Add another column named **Language** with a **TEXT** data type to store the language that the movie was released in. Ensure that the default for this language is **English**. 添加另一个名为 Language 的带有 TEXT 数据类型的列，以存储电影发行的语言。确保此语言的默认值为英语。 参考答案 SQL Lesson 18: Dropping tablesDrop table statement Exercise 18 — Tasks 1. We've sadly reached the end of our lessons, lets clean up by removing the *Movies* table 我们已经很遗憾地结束了我们的课程，让我们删除Movies表 2. And drop the *BoxOffice* table as well 并且同样的去除BoxOffice表 参考答案 "},{"title":"SQL Lesson 18: Dropping tables","date":"2020-10-22T16:00:00.000Z","url":"/2020/10/23/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/18.SQL%20Lesson%2018%20Dropping%20tables/SQL%20Lesson%2018%20Dropping%20tables/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 18: Dropping tablesDrop table statement Exercise 18 — Tasks 1. We've sadly reached the end of our lessons, lets clean up by removing the *Movies* table 我们已经很遗憾地结束了我们的课程，让我们删除Movies表 2. And drop the *BoxOffice* table as well 并且同样的去除BoxOffice表 参考答案 "},{"title":"SQL Lesson 17: 修改表","date":"2020-10-21T16:00:00.000Z","url":"/2020/10/22/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/17.SQL%20Lesson%2017%20Altering%20tables/SQL%20Lesson%2017%20Altering%20tables/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 17: 修改表添加列修改表以添加新列 移除列修改表以删除列 重命名表更改表名 Exercise 17 — Tasks 1.Add a column named **Aspect_ratio** with a **FLOAT** data type to store the aspectratio each movie was released in. 添加一个名为 Aspect _ ratio 的列，该列具有 FLOAT 数据类型，用于存储年发布的每部电影的 Aspect-ratio。 2.Add another column named **Language** with a **TEXT** data type to store the language that the movie was released in. Ensure that the default for this language is **English**. 添加另一个名为 Language 的带有 TEXT 数据类型的列，以存储电影发行的语言。确保此语言的默认值为英语。 参考答案 "},{"title":"SQL Lesson 16: Creating tables","date":"2020-10-20T19:00:00.000Z","url":"/2020/10/21/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/16.SQL%20Lesson%2016%20Creating%20tables/SQL%20Lesson%2016%20Creating%20tables/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！部分指令该网站不支持！) SQL Lesson 16: Creating tables创建带有可选表格约束和默认值的表格语句 Table data types Data type Description INTEGER, BOOLEAN 整数数据类型可以存储整数值，如数字的计数或年龄。在某些实现中，布尔值只是表示为0或1的整数值。 FLOAT, DOUBLE, REAL 浮点数据类型可以存储更精确的数值数据，如测量值或小数值。根据该值所需的浮点精度，可以使用不同的类型。 CHARACTER(num_chars), VARCHAR(num_chars), TEXT 基于文本的数据类型可以在各种地区存储字符串和文本。在处理这些列时，不同类型之间的区别通常相当于底层数据库的效率。CHARACTER和VARCHAR(可变字符)类型都是用它们可以存储的最大字符数指定的(较长的值可能会被截断)，因此使用大表存储和查询更有效。 DATE, DATETIME SQL还可以存储日期和时间戳，以跟踪时间序列和事件数据。使用它们可能很棘手，特别是在跨时区操作数据时。 BLOB 最后，SQL可以将二进制数据以blob的形式直接存储在数据库中。这些值对数据库通常是不透明的，因此通常必须使用正确的元数据存储它们，以便查询它们。 Docs: MySQL, Postgres, SQLite, Microsoft SQL Server Table constraints Constraint Description PRIMARY KEY 这意味着这个列中的值是唯一的，每个值都可以用来标识该表中的一行。 AUTOINCREMENT 对于整型值，这意味着值将自动填充，并在每次插入行时递增。不是所有数据库都支持。 UNIQUE 这意味着这一列中的值必须是唯一的，因此不能在这一列中插入与表中另一行值相同的行。与“主键”不同的是，它不必是表中某一行的键。 NOT NULL 这意味着插入的值不能是’ NULL ‘。 CHECK (expression) 这允许您运行更复杂的表达式来测试插入的值是否有效。例如，您可以检查值是否为正，或大于特定的大小，或以特定的前缀开头，等等。 FOREIGN KEY 这是一种一致性检查，确保此列中的每个值与另一个表中某列中的另一个值相对应。例如，如果有两个表，一个按ID列出所有雇员，另一个列出他们的工资信息，那么“FOREIGN KEY”可以确保工资表中的每一行都对应于主employee列表中的一个有效雇员。 An example Exercise 16 — Tasks 1.创建一个名为Database的新表，包含以下列: -Name描述数据库名称的字符串(文本) -Version该数据库的最新版本号(浮点数) -Download_count下载数据库的整数计数 该表没有约束。 参考答案 "},{"title":"SQL Lesson 15: Deleting rows","date":"2020-10-20T16:00:00.000Z","url":"/2020/10/21/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/15.SQL%20Lesson%2015%20Deleting%20rows/SQL%20Lesson%2015%20Deleting%20rows/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 15: Deleting rows带条件的删除语句 Exercise 15 — Tasks 1.This database is getting too big, lets remove all movies that were released before 2005. 这个数据库太大了，让我们删除所有2005年之前上映的电影。 2.Andrew Stanton has also left the studio, so please remove all movies directed by him. Andrew Stanton也离开了工作室，所以请删除他执导的所有电影。 参考答案 "},{"title":"SQL Lesson 14: Updating rows","date":"2020-10-19T17:00:00.000Z","url":"/2020/10/20/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/14.SQL%20Lesson%2014%20Updating%20rows/SQL%20Lesson%2014%20Updating%20rows/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 14: Updating rows跟新表数据 Exercise 14 — Tasks 1.The director for A Bug's Life is incorrect, it was actually directed by John Lasseter A Bug's Life的导演是错误的，实际上是John Lasseter导演的 2.The year that Toy Story 2 was released is incorrect, it was actually released in 1999 Toy Story 2发布的年份是不正确的，它实际上是在1999年上映的 3.Both the title and director for Toy Story 8 is incorrect! The title should be \"Toy Story 3\" and it was directed by Lee Unkrich Toy Story 2的片名和导演都是错误的！标题应该是“Toy Story 3”，它是由李昂克里奇导演的 参考答案 "},{"title":"SQL Lesson 13: Inserting rows","date":"2020-10-19T16:00:00.000Z","url":"/2020/10/20/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/13.SQL%20Lesson%2013%20Inserting%20rows/SQL%20Lesson%2013%20Inserting%20rows/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 13: Inserting rows包含所有列的值的插入语句 插入特定列的语句 Exercise 13 — Tasks 1.Add the studio’s new production, Toy Story 4 to the list of movies (you can use any director) 将该工作室的新作品Toy Story 4添加到电影列表中(你可以使用任何导演) 2.Toy Story 4 has been released to critical acclaim! It had a rating of 8.7, and made 340 million domestically and 270 million internationally. Add the record to the BoxOffice table. Toy Story 4上映后广受好评!它的评分为8.7，国内票房为3.4亿美元，国际票房为2.7亿美元。将记录添加到BoxOffice表中。 参考答案 "},{"title":"SQL Lesson 12: Order of execution of a Query","date":"2020-10-18T18:13:00.000Z","url":"/2020/10/19/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/12.SQL%20Lesson%2012%20Order%20of%20execution%20of%20a%20Query/SQL%20Lesson%2012%20Order%20of%20execution%20of%20a%20Query/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 12: Order of execution of a Query完整的SELECT查询 Exercise 12 — Tasks 1.Find the number of movies each director has directed 找出每位导演导演的电影数量 2.Find the total domestic and international sales that can be attributed to each director 找出每一位导演在国内和国际上的总销售额 参考答案 "},{"title":"SQL Lesson 11: Queries with aggregates (Pt. 2)","date":"2020-10-18T16:00:00.000Z","url":"/2020/10/19/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/11.SQL%20Lesson%2011%20Queries%20with%20aggregates%20(Pt.%202)/SQL%20Lesson%2011%20Queries%20with%20aggregates%20(Pt.%202)/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 11: Queries with aggregates (Pt. 2)选择具有约束的查询 Exercise 11 — Tasks 1.Find the number of Artists in the studio (without a HAVING clause) 查找工作室中艺术家的数量(不用 HAVING 子句) 2.Find the number of Employees of each role in the studio 查找工作室中每种职责的雇员人数 3.Find the total number of years employed by all Engineers 找到所有工程师（Engineer）的总受雇年数（Years_employed） 参考答案 "},{"title":"SQL Lesson 10: Queries with aggregates (Pt. 1)","date":"2020-10-17T16:00:00.000Z","url":"/2020/10/18/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/10.SQL%20Lesson%2010%20Queries%20with%20aggregates%20(Pt.%201)/SQL%20Lesson%2010%20Queries%20with%20aggregates%20(Pt.%201)/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 10: Queries with aggregates (Pt. 1)Select query with aggregate functions over all rows Function Description COUNT(***)**, COUNT(column) 一个常用函数，用于在未指定列名的情况下统计组中的行数。否则，计算指定列中具有非空值的组中的行数。 MIN(column) 为组中的所有行查找指定列中的最小数值 MAX(column) 为组中的所有行在指定列中查找最大的数值。 **AVG(**column) 在指定列中查找组中所有行的平均数值。 SUM(column) 在指定的列中查找组中各行的所有数值之和。 Exercise 10 — Tasks 1.Find the longest time that an employee has been at the studio 找出员工在工作室工作的最长时间 2.For each role, find the average number of years employed by employees in that role 对于每个角色，查找该角色雇员的平均工作年限 3.Find the total number of employee years worked in each building 查找在每个建筑物工作的员工总年数 参考答案 "},{"title":"SQL Lesson 9: Queries with expressions","date":"2020-10-16T16:00:00.000Z","url":"/2020/10/17/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/9.SQL%20Lesson%209%20Queries%20with%20expressions/SQL%20Lesson%209%20Queries%20with%20expressions/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 9: Queries with expressions带有表达式的查询示例 带表达式的别名选择查询 具有列和表别名的查询示例 Exercise 9 — Tasks 1.List all movies and their combined sales in millions of dollars 列出所有电影及其总销售额（以百万美元计） 2.List all movies and their ratings in percent 列出所有电影及其收视率（使用百分比） 3.List all movies that were released on even number years 列出所有偶数年发行的电影 参考答案 "},{"title":"SQL Lesson 8: A short note on NULLs","date":"2020-10-15T16:00:00.000Z","url":"/2020/10/16/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/8.SQL%20Lesson%208%20A%20short%20note%20on%20NULLs/SQL%20Lesson%208%20A%20short%20note%20on%20NULLs/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 8: A short note on NULLs对NULL值有约束的选择查询 Exercise 8 — Tasks 1.Find the name and role of all employees who have not been assigned to a building 查找所有尚未分配到大楼的员工的名字和职责 2.Find the names of the buildings that hold no employees 找出没有员工的大楼的名字 参考答案 "},{"title":"SQL Lesson 7: OUTER JOINs","date":"2020-10-14T16:00:00.000Z","url":"/2020/10/15/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/7.SQL%20Lesson%207%20OUTER%20JOINs/SQL%20Lesson%207%20OUTER%20JOINs/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 7: OUTER JOINs在多个表上使用左/右/全连接选择查询 Exercise 7 — Tasks 1.Find the list of all buildings that have employees 找到所有有员工的建筑列表 2.Find the list of all buildings and their capacity 找到所有建筑及其Capacity的列表 3.List all buildings and the distinct employee roles in each building (including empty buildings) 列出所有建筑和每个建筑中不同的员工职责(role)(包括空的建筑) 参考答案 "},{"title":"SQL Lesson 6: Multi-table queries with JOINs","date":"2020-10-13T16:00:00.000Z","url":"/2020/10/14/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/6.SQL%20Lesson%206%20Multi-table%20queries%20with%20JOINs/SQL%20Lesson%206%20Multi-table%20queries%20with%20JOINs/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 6: Multi-table queries with JOINs在多个表上使用INNER JOIN选择查询 Exercise 6 — Tasks 1.Find the domestic and international sales for each movie 找出每部电影(Title)在国内和国际上的销售情况(Domestic_sales,International_sales) 2.Show the sales numbers for each movie that did better internationally rather than domestically 展示每一部在国际(International_sales)上比在国内(Domestic_sales)销量更好的电影 3.List all the movies by their ratings in descending order 把所有的电影按评分（Rating）降序排列 参考答案 "},{"title":"SQL Review: Simple SELECT Queries","date":"2020-10-12T16:00:00.000Z","url":"/2020/10/13/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/5.SQL%20Review%20Simple%20SELECT%20Queries/SQL%20Review%20Simple%20SELECT%20Queries/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Review: Simple SELECT Queries选择查询 Review 1 — Tasks 1.List all the Canadian cities and their populations 列出所有加拿大城市（City）及其人口(Population) 2.Order all the cities in the United States by their latitude from north to south 按照从北到南的纬度把美国所有的城市排序 3.List all the cities west of Chicago, ordered from west to east 列出芝加哥以西的所有城市，按从西到东的顺序 4.List the two largest cities in Mexico (by population) 列出墨西哥最大的两个城市(按人口分) 5.List the third and fourth largest cities (by population) in the United States and their population 列出美国第三和第四大城市(按人口)及其人口 注：Latitude 纬度， Longitude 经度 参考答案 "},{"title":"SQL Lesson 4: Filtering and sorting Query results","date":"2020-10-11T16:00:00.000Z","url":"/2020/10/12/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/4.SQL%20Lesson%204%20Filtering%20and%20sorting%20Query%20results/SQL%20Lesson%204%20Filtering%20and%20sorting%20Query%20results/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 4: Filtering and sorting Query results唯一结果的选择查询 带有有序结果的选择查询 限制行的选择查询 Exercise 4 — Tasks 1.List all directors of Pixar movies (alphabetically), without duplicates 列出所有的皮克斯电影的directors（照字母顺序排列），没有重复 2.List the last four Pixar movies released (ordered from most recent to least) 列出最近上映的四部皮克斯电影（从最近源到最早） 3.List the first five Pixar movies sorted alphabetically 按字母顺序列出皮克斯的前五部电影 4.List the next five Pixar movies sorted alphabetically 按字母顺序列出皮克斯5到10部电影 参考答案 "},{"title":"SQL Lesson 3: Queries with constraints (Pt. 2)","date":"2020-10-10T16:00:00.000Z","url":"/2020/10/11/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/3.SQL%20Lesson%203%20Queries%20with%20constraints%20(Pt.%202)/SQL%20Lesson%203%20Queries%20with%20constraints%20(Pt.%202)/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 3: Queries with constraints (Pt. 2) Operator Condition Example = 区分大小写的字符串精确比较 (注意单个的相等) 列 = “abc” != or &lt;&gt; 区分大小写的字符串不等精确比较 列 != “abcd” LIKE 不区分大小写的精确字符串比较 列 LIKE “ABC” NOT LIKE 不区分大小写的精确字符串不等比较 列 NOT LIKE “ABCD” % 用于字符串中的任意位置，以匹配由零个或多个字符组成的序列 (只和 LIKE 或 NOT LIKE 同时使用) 列 LIKE “%AT%” (matches “AT”, “ATTIC”, “CAT” or even “BATS”) _ 用于字符串中的任意位置匹配单个字符 (只和 LIKE 或 NOT LIKE 同时使用) 列 LIKE “AN_” (matches “AND”, but not “AN”) IN (…) 字符串存在于列表中 列 IN (“A”, “B”, “C”) NOT IN (…) 字符串不在列表中 列 NOT IN (“D”, “E”, “F”) 带约束的选择查询 Exercise 3 — Tasks 1.Find all the Toy Story movies 找到所有的Toy Story电影 2.Find all the movies directed by John Lasseter 找到所有由John Lasseter导演的电影 3.Find all the movies (and director) not directed by John Lasseter 找到所有的不是John Lasseter导演的不是电影（和Director） 4.Find all the WALL-* movies 找到所有的WALL-*电影 参考答案 "},{"title":"SQL Lesson 2: Queries with constraints (Pt. 1)","date":"2020-10-09T16:00:00.000Z","url":"/2020/10/10/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/2.SQL%20Lesson%202%20Queries%20with%20constraints%20(Pt.%201)/SQL%20Lesson%202%20Queries%20with%20constraints%20(Pt.%201)/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！少数指令该网站不支持！) SQL Lesson 2: Queries with constraints (Pt. 1)带约束的选择查询 Operator Condition SQL Example =, !=, &lt; &lt;=, &gt;, &gt;= 标准数值运算符 列 != 4 BETWEEN … AND … 数值在两个值范围内 (包含) 列 BETWEEN 1.5 AND 10.5 NOT BETWEEN … AND … 数值不在两个值范围内 (包含) 列 NOT BETWEEN 1 AND 10 IN (…) 数值在列表中 列 IN (2, 4, 6) NOT IN (…) 数值没在列表中 列 NOT IN (1, 3, 5) Exercise 2 — Tasks 1.Find the movie with a row id of 6 找到Id为6的电影 2.Find the movies released in the years between 2000 and 2010 找到movies中2000到2010年的电影 3.Find the movies not released in the years between 2000 and 2010 找到movies中没在2000到2010年的电影 4.Find the first 5 Pixar movies and their release year 找到最早的5个皮克斯电影和它们的年份 参考答案 "},{"title":"SQL Lesson 1: SELECT queries 101","date":"2020-10-08T16:00:00.000Z","url":"/2020/10/09/MySQL/%E5%9C%A8SQLBolt%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93/1.SQL%20Lesson%201%20SELECT%20queries%20101/SQL%20Lesson%201%20SELECT%20queries%20101/","tags":[["大数据","/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"],["数据库","/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"],["MySQL","/tags/MySQL/"]],"categories":[["MySQL","/categories/MySQL/"]],"content":"在sqlbolt上学习SQL学习网站原网址 (！部分指令该网站不支持！) SQL Lesson 1: SELECT queries 101查询表格中的特定列 查询所有列 Exercise1 — Tasks 1.Find the title of each film 从Movies中找到每个电影的名字(Title) 2.Find the director of each film 找到每个电影的Director 3.Find the title and director of each film 找到每个电影的Title和Director 4.Find the title and year of each film 找到每个电影的Title和Year 5.Find all the information about each film 找到每个电影的所有信息 参考答案 "}]